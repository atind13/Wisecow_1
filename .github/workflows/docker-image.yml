name: Self-Hosted CI with Local Docker & Kubernetes (Kind)

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-deploy:
    runs-on: self-hosted

    steps:
      # Step 1: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Ensure Docker is available
      - name: Check Docker version
        run: docker --version

      # Step 3: Cleanup existing containers
      - name: Cleanup old containers
        run: |
          echo "Cleaning up old Docker containers..."
          docker ps -aq | xargs -r docker stop || true
          docker ps -aq | xargs -r docker rm || true
          echo "Cleanup done."

      # Step 4: Build Docker image
      - name: Build Docker image
        run: docker build -t wisecow:local .

      # Step 5: Test image locally
      - name: Test Docker image
        run: |
          echo "Starting Wisecow container on port 4499..."
          docker run -d --name wisecow-test -p 4499:4499 wisecow:local
          sleep 10
          echo "Checking endpoint..."
          if ! curl -f http://localhost:4499; then
            echo "⚠️ Health check failed, dumping logs..."
            docker logs wisecow-test || true
            docker stop wisecow-test || true
            docker rm wisecow-test || true
            exit 1
          fi
          echo "✅ Wisecow container is healthy!"
          docker stop wisecow-test
          docker rm wisecow-test

      # ✅ Step 6: Set up Kind cluster
      - name: Set up Kind cluster
        run: |
          echo "Creating a fresh Kind cluster..."
          kind delete cluster --name wisecow || true
          kind create cluster --name wisecow --wait 60s
          kubectl cluster-info

      # Step 7: Load image into Kind
      - name: Load Docker image into Kind
        run: |
          echo "Loading local image into Kind cluster..."
          kind load docker-image wisecow:local --name wisecow
          kubectl get nodes
          echo "✅ Image loaded into Kind."

      # Step 8: Apply Kubernetes manifests
      - name: Deploy to Kubernetes (Kind)
        run: |
          kubectl apply -f wisecow-deployment.yaml
          kubectl apply -f wisecow-service.yaml
          kubectl apply -f wisecow-ingress.yaml
          echo "✅ Manifests applied."

      # Step 9: Wait for pods to be ready
      - name: Wait for deployment rollout
        run: |
          kubectl rollout status deployment/wisecow-deployment --timeout=120s
          kubectl get pods -o wide
          kubectl get svc
          kubectl get ingress

      # Step 10: Validate deployment
      - name: Validate deployment
        run: |
          echo "Waiting for service to stabilize..."
          sleep 10
          NODE_PORT=$(kubectl get svc wisecow-service -o jsonpath='{.spec.ports[0].nodePort}')
          echo "NodePort is $NODE_PORT"
          CLUSTER_IP=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' kind-control-plane)
          echo "Accessing app at http://$CLUSTER_IP:$NODE_PORT"
          curl -v http://$CLUSTER_IP:$NODE_PORT || true

      # Step 11: Cleanup
      - name: Cleanup Kind and Docker
        if: always()
        run: |
          echo "Cleaning up resources..."
          docker stop wisecow-test || true
          docker rm wisecow-test || true
          kind delete cluster --name wisecow || true
          echo "✅ Cleanup complete."
